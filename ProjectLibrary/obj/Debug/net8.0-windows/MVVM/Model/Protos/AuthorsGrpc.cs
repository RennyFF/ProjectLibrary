// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MVVM/Model/Protos/authors.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace ProjectLibrary.Client.Author {
  public static partial class AuthorService
  {
    static readonly string __ServiceName = "authorproto.AuthorService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProjectLibrary.Client.Author.RequestCountity> __Marshaller_authorproto_RequestCountity = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProjectLibrary.Client.Author.RequestCountity.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProjectLibrary.Client.Author.ResponseCountity> __Marshaller_authorproto_ResponseCountity = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProjectLibrary.Client.Author.ResponseCountity.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProjectLibrary.Client.Author.RequestAuthorsByPage> __Marshaller_authorproto_RequestAuthorsByPage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProjectLibrary.Client.Author.RequestAuthorsByPage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProjectLibrary.Client.Author.ResponseAuthorsByPage> __Marshaller_authorproto_ResponseAuthorsByPage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProjectLibrary.Client.Author.ResponseAuthorsByPage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProjectLibrary.Client.Author.RequestSingleAuthor> __Marshaller_authorproto_RequestSingleAuthor = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProjectLibrary.Client.Author.RequestSingleAuthor.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProjectLibrary.Client.Author.ResponseSingleAuthor> __Marshaller_authorproto_ResponseSingleAuthor = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProjectLibrary.Client.Author.ResponseSingleAuthor.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ProjectLibrary.Client.Author.RequestCountity, global::ProjectLibrary.Client.Author.ResponseCountity> __Method_GetCountity = new grpc::Method<global::ProjectLibrary.Client.Author.RequestCountity, global::ProjectLibrary.Client.Author.ResponseCountity>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCountity",
        __Marshaller_authorproto_RequestCountity,
        __Marshaller_authorproto_ResponseCountity);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ProjectLibrary.Client.Author.RequestAuthorsByPage, global::ProjectLibrary.Client.Author.ResponseAuthorsByPage> __Method_GetAuthorsByPage = new grpc::Method<global::ProjectLibrary.Client.Author.RequestAuthorsByPage, global::ProjectLibrary.Client.Author.ResponseAuthorsByPage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAuthorsByPage",
        __Marshaller_authorproto_RequestAuthorsByPage,
        __Marshaller_authorproto_ResponseAuthorsByPage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ProjectLibrary.Client.Author.RequestSingleAuthor, global::ProjectLibrary.Client.Author.ResponseSingleAuthor> __Method_GetSingleAuthor = new grpc::Method<global::ProjectLibrary.Client.Author.RequestSingleAuthor, global::ProjectLibrary.Client.Author.ResponseSingleAuthor>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSingleAuthor",
        __Marshaller_authorproto_RequestSingleAuthor,
        __Marshaller_authorproto_ResponseSingleAuthor);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ProjectLibrary.Client.Author.AuthorsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for AuthorService</summary>
    public partial class AuthorServiceClient : grpc::ClientBase<AuthorServiceClient>
    {
      /// <summary>Creates a new client for AuthorService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AuthorServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AuthorService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AuthorServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AuthorServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AuthorServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ProjectLibrary.Client.Author.ResponseCountity GetCountity(global::ProjectLibrary.Client.Author.RequestCountity request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCountity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ProjectLibrary.Client.Author.ResponseCountity GetCountity(global::ProjectLibrary.Client.Author.RequestCountity request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCountity, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ProjectLibrary.Client.Author.ResponseCountity> GetCountityAsync(global::ProjectLibrary.Client.Author.RequestCountity request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCountityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ProjectLibrary.Client.Author.ResponseCountity> GetCountityAsync(global::ProjectLibrary.Client.Author.RequestCountity request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCountity, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ProjectLibrary.Client.Author.ResponseAuthorsByPage GetAuthorsByPage(global::ProjectLibrary.Client.Author.RequestAuthorsByPage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuthorsByPage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ProjectLibrary.Client.Author.ResponseAuthorsByPage GetAuthorsByPage(global::ProjectLibrary.Client.Author.RequestAuthorsByPage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAuthorsByPage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ProjectLibrary.Client.Author.ResponseAuthorsByPage> GetAuthorsByPageAsync(global::ProjectLibrary.Client.Author.RequestAuthorsByPage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuthorsByPageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ProjectLibrary.Client.Author.ResponseAuthorsByPage> GetAuthorsByPageAsync(global::ProjectLibrary.Client.Author.RequestAuthorsByPage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAuthorsByPage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ProjectLibrary.Client.Author.ResponseSingleAuthor GetSingleAuthor(global::ProjectLibrary.Client.Author.RequestSingleAuthor request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSingleAuthor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ProjectLibrary.Client.Author.ResponseSingleAuthor GetSingleAuthor(global::ProjectLibrary.Client.Author.RequestSingleAuthor request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSingleAuthor, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ProjectLibrary.Client.Author.ResponseSingleAuthor> GetSingleAuthorAsync(global::ProjectLibrary.Client.Author.RequestSingleAuthor request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSingleAuthorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ProjectLibrary.Client.Author.ResponseSingleAuthor> GetSingleAuthorAsync(global::ProjectLibrary.Client.Author.RequestSingleAuthor request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSingleAuthor, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AuthorServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AuthorServiceClient(configuration);
      }
    }

  }
}
#endregion
